@model CampaignDetailsViewModel

@{
    ViewData["Title"] = $"Chiến dịch {Model.Id}";
    var categories = (List<CategoryViewModel>)ViewBag.Categories;
    var cities = (List<EntityViewModel>)ViewBag.Cities;
}


<div class="row">
    <div class="col-md-6">

        @*@if (Model.DateStart.HasValue)
            {
                <div>
                    Thời gian: @Model.DateStart.Value.ToViDate()  -  @Model.DateEnd.Value.ToViDate()
                </div>
            }*@
        <div>
            Mã chiến dịch:  <strong class="text-primary">@Model.Id</strong>
        </div>
        <div>
            Chiến dịch: <span class="text-primary"> @Model.Type.ToDisplayName()</span>
            @if (Model.Type == CampaignType.ShareContent || Model.Type == CampaignType.ShareContentWithCaption)
            {

                if (Model.EnabledAccountChargeExtra)
                {
                    <span> - </span> <span>Đính kèm hình ảnh cá nhân</span>
                }
            }
        </div>
        <div>
            Trạng thái:  @Model.Status.ToBadge()
        </div>

        <div>
            Đối tượng: @foreach (var accountType in Model.AccountTypes)
            {
                <span class="badge badge-info">@accountType.ToDisplayName()</span>
            }
        </div>
        <div>
            Mô tả:  @Model.Description
        </div>

        @if (Model.CountOption > 0)
        {
            <h6>Tiêu chí</h6>
            <ul>
                @if (Model.Gender.HasValue)
                {
                    <li>Giới tính: @Model.Gender.Value.ToDisplayName()</li>
                }
                @if (Model.CityId.HasValue)
                {
                    var city = cities.FirstOrDefault(m => m.Id == Model.CityId.Value);
                    if (city != null)
                    {
                        <li>Khu vực: <strong>@city.Name</strong></li>
                    }
                }
                @if (Model.AgeStart.HasValue)
                {
                    <li>Độ tuổi: <strong>@Model.AgeStart</strong> - <strong>@Model.AgeEnd</strong></li>
                }

                @if (Model.CategoryIds.Count > 0)
                {
                    var cats = categories.Where(m => Model.CategoryIds.Contains(m.Id));

                    <li>
                        Lĩnh vực quan tâm/thế mạnh:
                        @foreach (var cat in cats)
                        {
                            <strong>@cat.Name</strong>
                        }
                    </li>
                }

            </ul>

        }



    </div>
    <div class="col-md-6">

        <div>Tổng phí: <span class="text-danger">@Model.Payment.TotalChargeAmount.ToPriceText()</span> </div>

        <div>Đã thanh toán: <span class="text-success">@Model.Payment.TotalPaidAmount.ToPriceText()</span> </div>

    </div>
</div>

@{
    var steps = new List<string>() { "Thanh toán phí dịch vụ", "Thành viên tham gia", "Bắt đầu chiến dịch", "Theo dõi chiến dịch", "Kết thúc" };

    var activestepIdx = 0;
    if (Model.Payment.IsValidServiceCharge)
    {
        activestepIdx = 0;
    }
    else
    {
        activestepIdx = 1;
    }
    <ul class="stepper stepper-vertical m-0 p-0">

        @for (var i = 0; i < steps.Count; i++)
        {
            var stepCssClass = i < activestepIdx ? "completed" : i == activestepIdx ? "active" : "";
            <li class="@stepCssClass">
                <a href="javascript:;">
                    <span class="circle">@(i + 1)</span>
                    <span class="label">@steps[i]</span>
                </a>
                @if (i == activestepIdx)
                {
                <div class="step-content">
                    @if (activestepIdx == 0)
                    {
                        <partial name="_DetailsStepperStep1Partial" model="Model" />
                    }
                    else if (activestepIdx == 1)
                    {
                        <partial name="_DetailsStepperStep2Partial" model="Model" />
                    }
                </div>
                }
            </li>

        }
    </ul>
}
