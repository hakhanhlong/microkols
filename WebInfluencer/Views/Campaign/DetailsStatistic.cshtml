@model MarketPlaceViewModel
@inject WebServices.Interfaces.IAccountService AccountService
@{

    ViewData["Title"] = $"Chiến dịch {Model.Campaign.Code}";
    var campaignAccount = Model.CampaignAccounts.FirstOrDefault(m => m.AccountId == CurrentUser.Id);

}
@section Scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        $().ready(function () {
            if ($('#chartModel').length > 0) {


                google.charts.load('current', { 'packages': ['corechart'] });
                google.charts.setOnLoadCallback(drawChart);
                function drawChart() {

                    var chartData = JSON.parse($('#chartModel').html());
                    console.log('chartData', chartData);
                    var data = google.visualization.arrayToDataTable(chartData);

                    var options = {
                        title: 'Thống kê',
                        curveType: 'function',
                        legend: { position: 'bottom' }
                    };

                    var chart = new google.visualization.LineChart(document.getElementById('chartStatistic'));

                    chart.draw(data, options);
                }

            }
        });
    </script>
}
@section Top{

    <partial name="_DetailBreadcrumbPartial" model="Model" />

}


<div class="container">


    <partial name="_DetailsNavPartial" model="Model" />
    <div class="tab-content" id="myTabContent">

        <div class="tab-pane fade active show">
            <div class="card border-0 card-body">
                <div class="h4">@Model.Campaign.Type.ToText()</div>
                <div class="font-weight-bold text-primary">@Model.Campaign.Title</div>

                <hr />

                @if (campaignAccount != null)
                {
                    var statistics = (List<CampaignAccountStatisticViewModel>)ViewBag.Statistics;

                    var total = statistics.Sum(m => m.CountLike) + statistics.Sum(m => m.CountComment) + statistics.Sum(m => m.CountShare);


                    <div class="h4">Tổng tương tác:</div>
                    <p> <strong>@(total)</strong></p>

                    if (total > 0)
                    { 
                        <div class="h4">Thống kê:</div>
                        var chartData = new List<object>();
                        chartData.Add(new object[] { "Ngày", "Thích", "Share", "Comment" });
                        foreach (var item in statistics)
                        {
                            chartData.Add(new object[] { item.Date, item.CountLike, item.CountShare, item.CountComment });
                        }

                        <script type="text/template" id="chartModel">
                            @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(chartData))
                        </script>
                        <div id="chartStatistic" style="width: 100%; height: 500px"></div>
                    }



                }

            </div>

        </div>
    </div>

    @*<div class="row">
            <div class="col-md-8">


            </div>
            <div class="col-md-4">

                <partial name="_DetailSidebarPartial" model="Model" />


            </div>
        </div>*@
</div>